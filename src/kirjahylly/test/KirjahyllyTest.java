package kirjahylly.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import kirjahylly.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.09 16:34:48 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjahyllyTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa31 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa31() throws SailoException {    // Kirjahylly: 31
    Kirjahylly kirjahylly = new Kirjahylly(); 
    Kirja kirja1 = new Kirja(), kirja2 = new Kirja(); 
    kirja1.rekisteroi(); kirja2.rekisteroi(); 
    assertEquals("From: Kirjahylly line: 36", 0, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 37", 1, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja2); assertEquals("From: Kirjahylly line: 38", 2, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 39", 3, kirjahylly.getKirjoja()); 
    assertEquals("From: Kirjahylly line: 40", kirja1, kirjahylly.annaKirja(0)); 
    assertEquals("From: Kirjahylly line: 41", kirja2, kirjahylly.annaKirja(1)); 
    assertEquals("From: Kirjahylly line: 42", kirja1, kirjahylly.annaKirja(2)); 
    assertEquals("From: Kirjahylly line: 43", false, kirjahylly.annaKirja(1) == kirja1); 
    assertEquals("From: Kirjahylly line: 44", true, kirjahylly.annaKirja(1) == kirja2); 
    try {
    assertEquals("From: Kirjahylly line: 45", kirja1, kirjahylly.annaKirja(3)); 
    fail("Kirjahylly: 45 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 46", 4, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 47", 5, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 48", 6, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 49", 7, kirjahylly.getKirjoja()); 
    kirjahylly.lisaa(kirja1); assertEquals("From: Kirjahylly line: 50", 8, kirjahylly.getKirjoja()); 
    try {
    kirjahylly.lisaa(kirja1); 
    fail("Kirjahylly: 51 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailijat73 */
  @Test
  public void testAnnaKirjailijat73() {    // Kirjahylly: 73
    Kirjahylly kirjahylly = new Kirjahylly(); 
    Kirja kirja1 = new Kirja(), kirja2 = new Kirja(), kirja3 = new Kirja(); 
    kirja1.rekisteroi(); kirja2.rekisteroi(); kirja3.rekisteroi(); 
    int id1 = kirja1.getTunnusNro(); 
    int id2 = kirja2.getTunnusNro(); 
    Kirjailija kirj21 = new Kirjailija(id2); kirjahylly.lisaa(kirj21); 
    Kirjailija kirj11 = new Kirjailija(id1); kirjahylly.lisaa(kirj11); 
    Kirjailija kirj22 = new Kirjailija(id2); kirjahylly.lisaa(kirj22); 
    Kirjailija kirj12 = new Kirjailija(id1); kirjahylly.lisaa(kirj12); 
    Kirjailija kirj23 = new Kirjailija(id2); kirjahylly.lisaa(kirj23); 
    List<Kirjailija> loytyneet; 
    loytyneet = kirjahylly.annaKirjailijat(kirja3); 
    assertEquals("From: Kirjahylly line: 90", 0, loytyneet.size()); 
    loytyneet = kirjahylly.annaKirjailijat(kirja1); 
    assertEquals("From: Kirjahylly line: 92", 2, loytyneet.size()); 
    assertEquals("From: Kirjahylly line: 93", true, loytyneet.get(0) == kirj11); 
    assertEquals("From: Kirjahylly line: 94", true, loytyneet.get(1) == kirj12); 
    loytyneet = kirjahylly.annaKirjailijat(kirja2); 
    assertEquals("From: Kirjahylly line: 96", 3, loytyneet.size()); 
    assertEquals("From: Kirjahylly line: 97", false, loytyneet.get(0) == kirj23); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailijat109 */
  @Test
  public void testAnnaKirjailijat109() {    // Kirjahylly: 109
    Kirjahylly kirjahylly = new Kirjahylly(); 
    Kirja kirja1 = new Kirja(), kirja2 = new Kirja(), kirja3 = new Kirja(); 
    kirja1.rekisteroi(); kirja2.rekisteroi(); kirja3.rekisteroi(); 
    int id1 = kirja1.getTunnusNro(); 
    int id2 = kirja2.getTunnusNro(); 
    Kirjailija kirj21 = new Kirjailija(id2); kirjahylly.lisaa(kirj21); 
    Kirjailija kirj11 = new Kirjailija(id1); kirjahylly.lisaa(kirj11); 
    Kirjailija kirj22 = new Kirjailija(id2); kirjahylly.lisaa(kirj22); 
    Kirjailija kirj12 = new Kirjailija(id1); kirjahylly.lisaa(kirj12); 
    Kirjailija kirj23 = new Kirjailija(id2); kirjahylly.lisaa(kirj23); 
    List<Kirjailija> loytyneet; 
    loytyneet = kirjahylly.annaKirjailijat(); 
    assertEquals("From: Kirjahylly line: 126", 5, loytyneet.size()); 
    assertEquals("From: Kirjahylly line: 127", true, loytyneet.get(0) == kirj21); 
    assertEquals("From: Kirjahylly line: 128", true, loytyneet.get(3) == kirj12); 
    assertEquals("From: Kirjahylly line: 129", false, loytyneet.get(0) == kirj23); 
    loytyneet = kirjahylly.annaKirjailijat(kirja1); 
    assertEquals("From: Kirjahylly line: 131", true, loytyneet.get(1) == kirj12); 
  } // Generated by ComTest END
}