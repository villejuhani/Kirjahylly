package kirjahylly.test;
// Generated by ComTest BEGIN
import kirjahylly.*;
import java.io.File;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.31 18:05:09 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjailijatTest {



  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa50 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa50() throws SailoException,CloneNotSupportedException {    // Kirjailijat: 50
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija kirjailija1 = new Kirjailija(), kirjailija2 = new Kirjailija(); 
    kirjailija1.rekisteroi(); kirjailija2.rekisteroi(); 
    assertEquals("From: Kirjailijat line: 56", 0, kirjailijat.getLkm()); 
    kirjailijat.korvaaTaiLisaa(kirjailija1); assertEquals("From: Kirjailijat line: 57", 1, kirjailijat.getLkm()); 
    kirjailijat.korvaaTaiLisaa(kirjailija2); assertEquals("From: Kirjailijat line: 58", 2, kirjailijat.getLkm()); 
    Kirjailija kirjailija3 = kirjailija1.clone(); 
    kirjailija3.aseta(1, "test"); 
    Iterator<Kirjailija> it = kirjailijat.iterator(); 
    assertEquals("From: Kirjailijat line: 62", true, it.next() == kirjailija1); 
    kirjailijat.korvaaTaiLisaa(kirjailija3); assertEquals("From: Kirjailijat line: 63", 2, kirjailijat.getLkm()); 
    it = kirjailijat.iterator(); 
    Kirjailija j0 = it.next(); 
    assertEquals("From: Kirjailijat line: 66", kirjailija3, j0); 
    assertEquals("From: Kirjailijat line: 67", true, j0 == kirjailija3); 
    assertEquals("From: Kirjailijat line: 68", false, j0 == kirjailija1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna90 
   * @throws IndexOutOfBoundsException when error
   */
  @Test
  public void testAnna90() throws IndexOutOfBoundsException {    // Kirjailijat: 90
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija kirjailija21 = new Kirjailija(); kirjailija21.vastaaHarari(); 
    Kirjailija kirjailija11 = new Kirjailija(); kirjailija11.vastaaHarari(); 
    Kirjailija kirjailija22 = new Kirjailija(); kirjailija22.vastaaHarari(); 
    Kirjailija kirjailija12 = new Kirjailija(); kirjailija12.vastaaHarari(); 
    Kirjailija kirjailija23 = new Kirjailija(); kirjailija23.vastaaHarari(); 
    kirjailijat.lisaa(kirjailija21); 
    kirjailijat.lisaa(kirjailija11); 
    kirjailijat.lisaa(kirjailija22); 
    kirjailijat.lisaa(kirjailija12); 
    kirjailijat.lisaa(kirjailija23); 
    assertEquals("From: Kirjailijat line: 104", true, kirjailijat.anna(1) == kirjailija11); 
    assertEquals("From: Kirjailijat line: 105", false, kirjailijat.anna(2) == kirjailija23); 
    try {
    kirjailijat.anna(-1); 
    fail("Kirjailijat: 106 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    try {
    kirjailijat.anna(5); 
    fail("Kirjailijat: 107 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta123 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta123() throws SailoException {    // Kirjailijat: 123
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija kirjailija21 = new Kirjailija(); kirjailija21.vastaaHarari(); 
    Kirjailija kirjailija11 = new Kirjailija(); kirjailija11.vastaaHarari(); 
    Kirjailija kirjailija22 = new Kirjailija(); kirjailija22.vastaaHarari(); 
    Kirjailija kirjailija12 = new Kirjailija(); kirjailija12.vastaaHarari(); 
    Kirjailija kirjailija23 = new Kirjailija(); kirjailija23.vastaaHarari(); 
    String tiedNimi = "testikirjailijat"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    kirjailijat.lueTiedostosta(tiedNimi); 
    fail("Kirjailijat: 135 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kirjailijat.lisaa(kirjailija21); 
    kirjailijat.lisaa(kirjailija11); 
    kirjailijat.lisaa(kirjailija22); 
    kirjailijat.lisaa(kirjailija12); 
    kirjailijat.lisaa(kirjailija23); 
    kirjailijat.tallenna(); 
    kirjailijat = new Kirjailijat(); 
    kirjailijat.lueTiedostosta(tiedNimi); 
    Iterator<Kirjailija> i = kirjailijat.iterator(); 
    assertEquals("From: Kirjailijat line: 145", kirjailija21.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 146", kirjailija11.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 147", kirjailija22.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 148", kirjailija12.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 149", kirjailija23.toString(), i.next().toString()); 
    assertEquals("From: Kirjailijat line: 150", false, i.hasNext()); 
    kirjailijat.lisaa(kirjailija23); 
    kirjailijat.tallenna(); 
    assertEquals("From: Kirjailijat line: 153", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Kirjailijat line: 155", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator268 */
  @Test
  public void testIterator268() {    // Kirjailijat: 268
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija kirj21 = new Kirjailija("Harari"); kirjailijat.lisaa(kirj21); 
    Kirjailija kirj11 = new Kirjailija("Austen"); kirjailijat.lisaa(kirj11); 
    Kirjailija kirj22 = new Kirjailija("Shelley"); kirjailijat.lisaa(kirj22); 
    Iterator<Kirjailija> i2=kirjailijat.iterator(); 
    assertEquals("From: Kirjailijat line: 278", kirj21, i2.next()); 
    assertEquals("From: Kirjailijat line: 279", kirj11, i2.next()); 
    assertEquals("From: Kirjailijat line: 280", kirj22, i2.next()); 
    try {
    assertEquals("From: Kirjailijat line: 281", kirj11, i2.next()); 
    fail("Kirjailijat: 281 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailijat296 */
  @Test
  public void testAnnaKirjailijat296() {    // Kirjailijat: 296
    Kirjailijat kirjailijaat = new Kirjailijat(); 
    Kirjailija kirj21 = new Kirjailija(); kirj21.vastaaHarari(); kirj21.rekisteroi(); kirjailijaat.lisaa(kirj21); 
    Kirjailija kirj11 = new Kirjailija("Shelley"); kirj11.rekisteroi(); kirjailijaat.lisaa(kirj11); 
    Kirjailija kirj22 = new Kirjailija("Austen"); kirj22.rekisteroi(); kirjailijaat.lisaa(kirj22); 
    Kirjailija kirj12 = new Kirjailija("Testii"); kirj12.rekisteroi(); kirjailijaat.lisaa(kirj12); 
    Kirjailija kirj23 = new Kirjailija("King"); kirj23.rekisteroi(); kirjailijaat.lisaa(kirj23); 
    Kirjailija kirj101 = kirjailijaat.annaKirjailijat(3); 
    Kirjailija kirj102 = kirjailijaat.annaKirjailijat(5); 
    assertEquals("From: Kirjailijat line: 308", true, kirj101 == kirj21); 
    assertEquals("From: Kirjailijat line: 309", false, kirj102 == kirj12); 
    Kirjailija kirj103 = kirjailijaat.annaKirjailijat(4); 
    assertEquals("From: Kirjailijat line: 311", true, kirj103 == kirj11); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjailijat325 */
  @Test
  public void testAnnaKirjailijat325() {    // Kirjailijat: 325
    Kirjailijat kirjailijat = new Kirjailijat(); 
    Kirjailija kirj25 = new Kirjailija("Harari"); kirj25.rekisteroi(); kirjailijat.lisaa(kirj25); 
    Kirjailija kirj17 = new Kirjailija("Austen"); kirj17.rekisteroi(); kirjailijat.lisaa(kirj17); 
    Kirjailija kirj27 = new Kirjailija("Shelley"); kirj27.rekisteroi(); kirjailijat.lisaa(kirj27); 
    List<Kirjailija> loytyneet; 
    loytyneet = kirjailijat.annaKirjailijat(); 
    assertEquals("From: Kirjailijat line: 336", 3, loytyneet.size()); 
    assertEquals("From: Kirjailijat line: 337", true, loytyneet.get(0) == kirj25); 
    assertEquals("From: Kirjailijat line: 338", true, loytyneet.get(2) == kirj27); 
    assertEquals("From: Kirjailijat line: 339", false, loytyneet.get(0) == kirj17); 
  } // Generated by ComTest END
}