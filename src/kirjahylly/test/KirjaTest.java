package kirjahylly.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kirjahylly.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.31 15:09:49 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjaTest {



  // Generated by ComTest BEGIN
  /** testAseta133 */
  @Test
  public void testAseta133() {    // Kirja: 133
    Kirja kirja = new Kirja(); 
    assertEquals("From: Kirja line: 135", null, kirja.aseta(1,"Sapiens")); 
    assertEquals("From: Kirja line: 136", "Vain numeroita julkaisuvuoteen", kirja.aseta(4,"baeraa")); 
    assertEquals("From: Kirja line: 137", null, kirja.aseta(4,"2014")); 
    assertEquals("From: Kirja line: 138", "Vain numeroita sivumäärään", kirja.aseta(5,"kissa")); 
    assertEquals("From: Kirja line: 139", null, kirja.aseta(5,"211")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetNimi221 */
  @Test
  public void testGetNimi221() {    // Kirja: 221
    Kirja sapiens = new Kirja(); 
    sapiens.taytaSapiensTiedoilla(); 
    { String _l_=sapiens.getNimi(),_r_="Sapiens: Ihmisen lyhyt historia.*"; if ( !_l_.matches(_r_) ) fail("From: Kirja line: 224" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi292 */
  @Test
  public void testRekisteroi292() {    // Kirja: 292
    Kirja sapiens = new Kirja(); 
    assertEquals("From: Kirja line: 294", 0, sapiens.getTunnusNro()); 
    sapiens.rekisteroi(); 
    Kirja frankenstein = new Kirja(); 
    frankenstein.rekisteroi(); 
    int n1 = sapiens.getTunnusNro(); 
    int n2 = frankenstein.getTunnusNro(); 
    assertEquals("From: Kirja line: 300", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString479 */
  @Test
  public void testToString479() {    // Kirja: 479
    Kirja kirja = new Kirja(); 
    kirja.parse("  1  |  Sapiens  | 1 |Tietokirjallisuus"); 
    assertEquals("From: Kirja line: 482", true, kirja.toString().startsWith("1|Sapiens|1|Tietokirjallisuus|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse503 */
  @Test
  public void testParse503() {    // Kirja: 503
    Kirja kirja = new Kirja(); 
    kirja.parse("   1  |  Sapiens   | 1 | Tietokirjallisuus"); 
    assertEquals("From: Kirja line: 506", 1, kirja.getTunnusNro()); 
    assertEquals("From: Kirja line: 507", true, kirja.toString().startsWith("1|Sapiens|1|Tietokirjallisuus|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    kirja.rekisteroi(); 
    int n = kirja.getTunnusNro(); 
    kirja.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kirja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kirja line: 513", n+20+1, kirja.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals535 */
  @Test
  public void testEquals535() {    // Kirja: 535
    Kirja kirja1 = new Kirja(); 
    kirja1.parse("   1  |  Sapiens   | 1 | Tietokirjallisuus"); 
    Kirja kirja2 = new Kirja(); 
    kirja2.parse("   1  |  Sapiens   | 1 | Tietokirjallisuus"); 
    Kirja kirja3 = new Kirja(); 
    kirja3.parse("   1  |  Sapiens   | 1 | Kauhu"); 
    assertEquals("From: Kirja line: 543", true, kirja1.equals(kirja2)); 
    assertEquals("From: Kirja line: 544", true, kirja2.equals(kirja1)); 
    assertEquals("From: Kirja line: 545", false, kirja1.equals(kirja3)); 
    assertEquals("From: Kirja line: 546", false, kirja3.equals(kirja2)); 
  } // Generated by ComTest END
}