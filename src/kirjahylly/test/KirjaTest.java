package kirjahylly.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kirjahylly.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.20 21:09:05 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KirjaTest {



  // Generated by ComTest BEGIN
  /** testGetNimi31 */
  @Test
  public void testGetNimi31() {    // Kirja: 31
    Kirja sapiens = new Kirja(); 
    sapiens.taytaSapiensTiedoilla(); 
    { String _l_=sapiens.getNimi(),_r_="Sapiens: Ihmisen lyhyt historia .*"; if ( !_l_.matches(_r_) ) fail("From: Kirja line: 34" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi84 */
  @Test
  public void testRekisteroi84() {    // Kirja: 84
    Kirja sapiens = new Kirja(); 
    assertEquals("From: Kirja line: 86", 0, sapiens.getTunnusNro()); 
    sapiens.rekisteroi(); 
    Kirja frankenstein = new Kirja(); 
    frankenstein.rekisteroi(); 
    int n1 = sapiens.getTunnusNro(); 
    int n2 = frankenstein.getTunnusNro(); 
    assertEquals("From: Kirja line: 92", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString126 */
  @Test
  public void testToString126() {    // Kirja: 126
    Kirja kirja = new Kirja(); 
    kirja.parse("  1  |  Sapiens  | Tietokirjallisuus"); 
    assertEquals("From: Kirja line: 129", true, kirja.toString().startsWith("1|Sapiens|Tietokirjallisuus|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse152 */
  @Test
  public void testParse152() {    // Kirja: 152
    Kirja kirja = new Kirja(); 
    kirja.parse("   1  |  Sapiens   | Tietokirjallisuus"); 
    assertEquals("From: Kirja line: 155", 1, kirja.getTunnusNro()); 
    assertEquals("From: Kirja line: 156", true, kirja.toString().startsWith("1|Sapiens|Tietokirjallisuus|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    kirja.rekisteroi(); 
    int n = kirja.getTunnusNro(); 
    kirja.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kirja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kirja line: 162", n+20+1, kirja.getTunnusNro()); 
  } // Generated by ComTest END
}